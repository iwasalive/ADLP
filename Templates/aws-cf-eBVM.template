{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template is intended to be installed into an existing VPC with two public subnets. It will create a windows instances in the private VPC subnets. **WARNING** This template creates Amazon EC2 Windows instance and related resources. ",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "VPCID",
                        "PrivateSubnetID",
                        "VPCCIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon EC2 Configuration"
                    },
                    "Parameters": [
                        "KeyPairName",
                        "WinInstanceType"
                    ]
                },
                {
                    "Label": {
                        "default": "Microsoft Windows Instance Configuration"
                    },
                    "Parameters": [
                        "AdminUser",
                        "AdminPassword",
                        "DomainDNSName"
                    ]
                }
            ],
            "ParameterLabels": {
                "AdminPassword": {
                    "default": "Admin Password"
                },
                "AdminUser": {
                    "default": "Admin User Name"
                },
                "DomainDNSName": {
                    "default": "Domain DNS Name"
                },
                "KeyPairName": {
                    "default": "Key Pair Name"
                },
                "PrivateSubnetID": {
                    "default": "Private Subnet ID"
                },
                "WinInstanceType": {
                    "default": "Windows Instance Type"
                },
                "VPCCIDR": {
                    "default": "VPC CIDR"
                },
                "VPCID": {
                    "default": "VPC ID"
                }
            }
        }
    },
    "Parameters": {
        "AdminPassword": {
            "Description": "Password for the administrative account. Must be at least 8 characters containing letters, numbers and symbols",
            "Type": "String",
            "MinLength": "8",
            "MaxLength": "32",
            "AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
            "NoEcho": "true"
        },
        "AdminUser": {
            "Description": "User name for the new local administrator account",
            "Type": "String",
            "Default": "StackAdmin",
            "MinLength": "5",
            "MaxLength": "25",
            "AllowedPattern": "[a-zA-Z0-9]*"
        },
        "DomainDNSName": {
            "Description": "Fully qualified domain name (FQDN) e.g. example.com",
            "Type": "String",
            "Default": "example.com",
            "MinLength": "3",
            "MaxLength": "25",
            "AllowedPattern": "[a-zA-Z0-9\\-]+\\..+"
        },
        "KeyPairName": {
            "Description": "Public/private key pairs allow you to securely connect to your instance after it launches",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "PrivateSubnetID": {
            "Description": "ID of the private subnet that you want to provision this instance into",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "WinInstanceType": {
            "Description": "Amazon EC2 instance type for the first Remote Desktop Gateway instance",
            "Type": "String",
            "Default": "m4.large",
            "AllowedValues": [
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m3.medium",
                "m3.large",
                "m4.large"
            ]
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Description": "VPC CIDR Block for access to this windows instance",
            "Type": "String"
        },
        "VPCID": {
            "Description": "ID of the VPC (e.g., vpc-0343606e)",
            "Type": "AWS::EC2::VPC::Id"
        }
    },
    "Rules": {
        "SubnetsInVPC": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::EachMemberIn": [
                            {
                                "Fn::ValueOfAll": [
                                    "AWS::EC2::Subnet::Id",
                                    "VpcId"
                                ]
                            },
                            {
                                "Fn::RefAll": "AWS::EC2::VPC::Id"
                            }
                        ]
                    },
                    "AssertDescription": "All subnets must in the VPC"
                }
            ]
        }
    },
    "Mappings": {
        "AWSAMIRegionMap": {
            "AMI": {
                "WS2008R2": "Windows_Server-2008-R2"
            },
            "ca-central-1": {
                "WS2008R2": "ami-a00185c4"
            }
        }
    },
    "Resources": {
        "WinInstanceHostRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": [
                                        "ec2:AssociateAddress",
                                        "ec2:DescribeAddresses"
                                    ],
                                    "Resource": [
                                        "*"
                                    ],
                                    "Effect": "Allow"
                                }
                            ]
                        },
                        "PolicyName": "WinInstance-eip-policy"
                    }
                ],
                "Path": "/",
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Effect": "Allow"
                        }
                    ],
                    "Version": "2012-10-17"
                }
            }
        },
        "WinInstanceHostProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Roles": [
                    {
                        "Ref": "WinInstanceHostRole"
                    }
                ],
                "Path": "/"
            }
        },
        "WinInstanceAutoScalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "LaunchConfigurationName": {
                    "Ref": "WinInstanceLaunchConfiguration"
                },
                "VPCZoneIdentifier": [
                    {
                        "Ref": "PrivateSubnetID"
                    }
                ],
                "MinSize": "1",
                "MaxSize": "1",
                "Cooldown": "300",
                "DesiredCapacity": "1",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "eBVM",
                        "PropagateAtLaunch": "true"
                    }
                ]
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Count": "1",
                    "Timeout": "PT30M"
                }
            }
        },
        "WinInstanceLaunchConfiguration": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "config": [
                            "setup",
                            "setupRemoting",
                            "finalize"
                        ]
                    },
                    "setup": {
                        "files": {
                            "c:\\cfn\\cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "\n",
                                            "region=",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.WinInstanceLaunchConfiguration.Metadata.AWS::CloudFormation::Init\n",
                                            "action=cfn-init.exe -v -c config -s ",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            " -r WinInstanceLaunchConfiguration",
                                            " --region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                                "source": "https://raw.githubusercontent.com/iwasalive/ADLP/master/Modules/Unzip-Archive.ps1"
                            },
                            "C:\\cfn\\modules\\AWSQuickStart.zip": {
                                "source": "https://raw.githubusercontent.com/iwasalive/ADLP/master/Modules/AWSQuickStart.zip"
                            }
                        },
                        "services": {
                            "windows": {
                                "cfn-hup": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "c:\\cfn\\cfn-hup.conf",
                                        "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        },
                        "commands": {
                            "a-set-execution-policy": {
                                "command": "powershell.exe -Command \"Set-ExecutionPolicy RemoteSigned -Force\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-unpack-quickstart-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\",
                                "waitAfterCompletion": "0"
                            },
                            "c-init-quickstart-module": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"",
                                            "New-AWSQuickStartResourceSignal -Stack '",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "' -Resource 'WinInstanceAutoScalingGroup' -Region '",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "d-create-admin": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "net user /add ",
                                            {
                                                "Ref": "AdminUser"
                                            },
                                            " ",
                                            {
                                                "Ref": "AdminPassword"
                                            },
                                            " /y"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "e-set-admin-group": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "net localgroup Administrators ",
                                            {
                                                "Ref": "AdminUser"
                                            },
                                            " /ADD"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "setupRemoting": {
                        "files": {
                            "C:\\cfn\\scripts\\setup-remoting.ps1": {
                                "source": "https://s3.ca-central-1.amazonaws.com/suncor-adlp/CloudFormation/Modules/setup-remoting.ps1"
                            }
                        },
                        "commands": {
                            "a-setupRemoting": {
                                "command": "powershell.exe -ExecutionPolicy Bypass -Command C:\\cfn\\scripts\\setup-remoting.ps1",
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "finalize": {
                        "commands": {
                            "1-signal-success": {
                                "command": "powershell.exe -Command \"Write-AWSQuickStartStatus\"",
                                "waitAfterCompletion": "0"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "WS2008R2"
                    ]
                },
                "SecurityGroups": [
                    {
                        "Ref": "RemoteDesktopSG"
                    }
                ],
                "IamInstanceProfile": {
                    "Ref": "WinInstanceHostProfile"
                },
                "InstanceType": {
                    "Ref": "WinInstanceType"
                },
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "50",
                            "VolumeType": "gp2"
                        }
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "<script>\n",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r WinInstanceLaunchConfiguration",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "</script>\n"
                            ]
                        ]
                    }
                }
            }
        },
        "RemoteDesktopSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable RDP and WinRM access from the public subnet",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "3389",
                        "ToPort": "3389",
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "-1",
                        "FromPort": "5986",
                        "ToPort": "5986",
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "-1",
                        "FromPort": "5985",
                        "ToPort": "5985",
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "icmp",
                        "FromPort": "-1",
                        "ToPort": "-1",
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    }
                ]
            }
        }
    },
    "Outputs": {
        "WinInstanceSGID": {
            "Value": {
                "Ref": "RemoteDesktopSG"
            },
            "Description": "Win Instance Group ID"
        },
        "ASGroupID": {
            "Value": {
                "Ref": "WinInstanceAutoScalingGroup"
            },
            "Description": "Returns the ID of the AutoScalingGroup "
        }
    }
}
